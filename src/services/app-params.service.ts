/* eslint-disable @typescript-eslint/no-explicit-any */
import { ApiService } from "./api.service";
import { ApiResponse } from "@/types/user.types";

export type ParamType = "admin" | "system";

export interface ParamData {
  [key: string]: any;
}

export class AppParamsService {
  /**
   * Obter par√¢metros administrativos
   */
  static async getAdminParams(): Promise<ApiResponse<ParamData>> {
    try {
      console.log("üìã Carregando par√¢metros administrativos...");
      return await ApiService.get<ParamData>("/settings");
    } catch (error) {
      console.error("‚ùå Erro ao carregar par√¢metros administrativos:", error);
      return {
        success: false,
        message: "Erro ao carregar par√¢metros administrativos",
      };
    }
  }

  /**
   * Atualizar par√¢metros administrativos
   */
  static async updateAdminParams(
    data: ParamData
  ): Promise<ApiResponse<ParamData>> {
    try {
      console.log("üíæ Salvando par√¢metros administrativos...");
      return await ApiService.post<ParamData>("/settings", data);
    } catch (error) {
      console.error("‚ùå Erro ao salvar par√¢metros administrativos:", error);
      return {
        success: false,
        message: "Erro ao salvar par√¢metros administrativos",
      };
    }
  }

  /**
   * Obter par√¢metros do sistema DrGest√£o
   */
  static async getSystemParams(): Promise<ApiResponse<ParamData>> {
    try {
      console.log("üìã Carregando par√¢metros do sistema...");
      return await ApiService.get<ParamData>("/appsettings");
    } catch (error) {
      console.error("‚ùå Erro ao carregar par√¢metros do sistema:", error);
      return {
        success: false,
        message: "Erro ao carregar par√¢metros do sistema",
      };
    }
  }

  /**
   * Atualizar par√¢metros do sistema DrGest√£o
   */
  static async updateSystemParams(
    data: ParamData
  ): Promise<ApiResponse<ParamData>> {
    try {
      console.log("üíæ Salvando par√¢metros do sistema...");
      return await ApiService.post<ParamData>("/appsettings", data);
    } catch (error) {
      console.error("‚ùå Erro ao salvar par√¢metros do sistema:", error);
      return {
        success: false,
        message: "Erro ao salvar par√¢metros do sistema",
      };
    }
  }

  /**
   * M√©todo gen√©rico para obter par√¢metros por tipo
   */
  static async getParams(type: ParamType): Promise<ApiResponse<ParamData>> {
    return type === "admin" ? this.getAdminParams() : this.getSystemParams();
  }

  /**
   * M√©todo gen√©rico para atualizar par√¢metros por tipo
   */
  static async updateParams(
    type: ParamType,
    data: ParamData
  ): Promise<ApiResponse<ParamData>> {
    return type === "admin"
      ? this.updateAdminParams(data)
      : this.updateSystemParams(data);
  }

  /**
   * Validar JSON
   */
  static validateJSON(jsonString: string): {
    isValid: boolean;
    error?: string;
    parsed?: ParamData;
  } {
    try {
      const parsed = JSON.parse(jsonString);
      return { isValid: true, parsed };
    } catch (error) {
      return {
        isValid: false,
        error: error instanceof Error ? error.message : "JSON inv√°lido",
      };
    }
  }

  /**
   * Formatar JSON com indenta√ß√£o
   */
  static formatJSON(data: ParamData): string {
    try {
      return JSON.stringify(data, null, 2);
    } catch (error) {
      return "{}";
    }
  }
}
